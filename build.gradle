buildscript {
    dependencies {
        classpath 'de.guntram.mcmod:crowdin-translate:1.2'
    }
    repositories {
        maven {
            name = 'CrowdinTranslate source'
            url = "https://minecraft.guntram.de/maven/"
        }
    }
}

plugins {
    id 'fabric-loom' version '0.6.30'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "1.1.0"
}

apply plugin: 'de.guntram.mcmod.crowdin-translate'
crowdintranslate.crowdinProjectName = 'aether'
crowdintranslate.minecraftProjectName = 'the_aether'
crowdintranslate.verbose = true
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url = "https://minecraft.guntram.de/maven/"
    }
    maven { url "https://maven.jamieswhiteshirt.com/libs-release/" }
    maven {
        name = "Modmenu"
        url = "https://maven.fabricmc.net/io/github/prospector/modmenu/"
    }
    maven {
        name = "Fabric"
        url = "https://maven.fabricmc.net/"
    }
    maven { url 'https://repo.repsy.io/mvn/gandiber/geckolib' }
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
    maven { 
              url = "https://www.cursemaven.com" 
              content {
                  includeGroup "curse.maven"
              }
    }
    maven { url "https://dl.bintray.com/kyrptonaught/customportalapi" }
    maven { url "https://hephaestus.dev/release" }
    maven { url "https://jitpack.io" }
    maven {
        name = "NerdHubMC"
        url = "https://maven.abusedmaster.xyz/"
    }
    jcenter()
    mavenCentral()
}

minecraft {
    accessWidener "src/main/resources/the_aether.accesswidener"
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Libraries
    modImplementation(include("com.jamieswhiteshirt:reach-entity-attributes:1.0.1"))
    modImplementation(include("io.github.cottonmc:LibGui:3.2.2+1.16.3"))
    modImplementation(include("curse.maven:geckolib-398667:3135822"))

    modImplementation "de.guntram.mcmod:crowdin-translate:1.2"
    include "de.guntram.mcmod:crowdin-translate:1.2"

    // Implement the required portions of FAPI
    // Remember to maintain these, and add the modular bits as needed. 
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    // Testing only, do not JiJ
    //modImplementation "io.github.prospector:modmenu:1.14.6+build.31"
    //modRuntime "me.shedaniel:RoughlyEnoughItems:5.6.2"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    modRuntime ("com.github.SuperCoder7979:databreaker:${databreaker_version}") {
        exclude module: "fabric-loader"
    }

    //customportalapi
    modImplementation "net.kyrptonaught:customportalapi:${project.customportalapi_version}"
    include "net.kyrptonaught:customportalapi:${project.customportalapi_version}"

    modImplementation "dev.hephaestus:seedy-behavior:${project.seedy_version}"
    include "dev.hephaestus:seedy-behavior:${project.seedy_version}"

    // Implement trinkets for parachutes, rings etc.
    modImplementation "com.github.emilyploszaj:trinkets:${trinkets_version}"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

//task publishModrinth (type: TaskModrinthUpload){
//    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
//    System.out.println("Enter the modrinth auth token: ");
//    token = br.readLine(); // Get password
//    projectId = 'IKpsG0nF'
//    System.out.println("Enter the version number:");
//    versionNumber = br.readLine();
//    System.out.println("Enter the version name:");
//    versionName = br.readLine();
//    uploadFile = jar // This is the java jar task
//    System.out.println("Enter the game version number: (See minotaur docs for valids)");
//    addGameVersion(br.readLine());
//    System.out.println("Enter changelog:");
//    changelog = br.readLine();
//    addLoader('fabric')
//}

jar {
    manifest {
        attributes 'Implementation-Title': 'AetherReborn',
                'Implementation-Version': project.version,
                'Main-Class': 'com.aether.executable.InstallerGUI'
    }
    from "LICENSE.md"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

build {
    dependsOn downloadTranslations
}
